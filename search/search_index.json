{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Coucal is a calendaring and scheduling tool with a powerful command line interface. It can be used to manage your calendars in other tools (e.g. MS Outlook, Google, etc.) and to collaborate directly with other calendar users.</p> <p>Coucal includes a tracker for task management, resource and availability management features, journaling, and powerful template and query tooling for managing your data.</p>"},{"location":"#wheres-the-ui","title":"Where's the UI?","text":"<p>Coucal is an API-first command-driven application for managing calendaring and scheduling information. </p> <p>We believe the most powerful tools are those that provide APIs or command line interfaces, allowing for integration with existing processes and systems. This is where the full potential of interoperability is realised, and interoperability is the prime directive of Coucal, and the iCalendar standards on which it is based.</p>"},{"location":"assets/","title":"Assets","text":"<p>TBD.</p>"},{"location":"attachments/","title":"Attachments","text":"<p>TBD.</p>"},{"location":"availability/","title":"Availability","text":"<p>TBD.</p>"},{"location":"channels/","title":"Channels","text":"<p>Integration channels allow Coucal to share calendar and resource updates with subscribers and attendees.</p>"},{"location":"channels/#overview","title":"Overview","text":"<p>Coucal supports sharing invites and updates to calendaring and scheduling data via configured channels. Each channel may support a subset of integration methods depending on the type of integration.</p>"},{"location":"channels/#integration-methods","title":"Integration Methods","text":"<p>The supported methods of integration include:</p> <ul> <li>Publish - share calendar data with anyone</li> <li>Request - invite specific attendees to join an event, etc.</li> <li>Reply - respond to a calendar invitation</li> <li>Add - modify published calendar data by adding occurrences</li> <li>Cancel - cancel published calendar data</li> <li>Refresh - request an update from a calendar publisher</li> <li>Counter - propose an alternative time for a calendar invitation</li> <li>Decline Counter - decline a proposal for changing a calendar invitation</li> </ul>"},{"location":"channels/#integration-channels","title":"Integration Channels","text":"<p>The integrations build-in to the Coucal application include:</p> <ul> <li>Email Transport (SMTP/IMAP)</li> <li>AWS Cloud-native Tooling (e.g. SQS, SNS, EventBridge, etc.)</li> <li>Direct Integration (via HTTP webhooks)</li> </ul>"},{"location":"channels/#email-transport","title":"Email Transport","text":"<p>As with most other calendaring clients, Coucal supports sending and receiving invites and other calendar updates via email. You will need to provide your email server configuration in order to use email integration.</p> <p>Supported Methods: Email supports all integration methods as it supports addressing individual attendees.</p>"},{"location":"channels/#aws-cloud-native-tooling","title":"AWS Cloud-native Tooling","text":"<p>Coucal also supports Enterprise Integration Patterns, such as message-based queues and pubsub implementations. AWS provides various tools in this space, which are available for configuration. These include:</p> <ul> <li>SQS - a serverless message queue with support for sequential or out of order message processing</li> <li>SNS - a serverless notification service with support for email and SMS</li> <li>EventBridge - a serverless pubsub implementation</li> </ul> <p>Supported Methods: As SQS and SNS can support delivering data to addressable attendees, Publish,  Request, Add, Cancel and Decline Counter MAY be supported. However, Reply, Refresh and Counter would  likely require a different channel such as email.</p> <p>Due to EventBridge being a pubsub model only Publish, Add and Cancel are supported.</p>"},{"location":"channels/#webhooks","title":"Webhooks","text":"<p>You can also directly communicate with other systems via supported webhooks. This allows you to share the full potential of Coucal by connecting multiple instances over HTTP.</p> <p>For example, you might develop a custom integration with an in-house scheduling or work tracking tool that you would like to expose via webhooks. With Coucal you can deploy an agent that is capable of iCalendar iTIP interoperability to synchronize one or more of your internal systems.</p> <p>Supported Methods: As webhooks MAY support delivering data to addressable attendees, Publish, Request, Add, Cancel and Decline Counter MAY be supported. However, Reply, Refresh and Counter would likely require a different channel such as email.</p>"},{"location":"collections/","title":"Collections","text":"<p>Collections provide a way to group together similar calendar and resource data.</p>"},{"location":"collections/#overview","title":"Overview","text":"<p>Each configured Connector contains one or more collections for managing user data. For each collection type there is a default collection that is used for commands where no collection is specified. The default collection can be changed via the <code>set-default</code> sub-command of the Collection feature.</p> <p>There are three types of collection available for storing calendar or card-based data, as well  as attachments.</p>"},{"location":"collections/#calendar-collections","title":"Calendar Collections","text":"<p>Calendar-based data includes anything managed via the scheduler, tracker, journal and availability features. These can all be stored in a calendar collection, along with saved templates for each of these features.</p>"},{"location":"collections/#card-collections","title":"Card Collections","text":"<p>Card-based data is managed via the asset and entity functions. This data, including groups and template can be stored in card collections.</p>"},{"location":"collections/#attachments","title":"Attachments","text":"<p>Any binary and other artefacts attached to card or calendar-based data can be stored in this type of collection. This collection type can be useful for enforcing lifecycle rules and centralized access to attachments.</p>"},{"location":"collections/#create-a-collection","title":"Create a Collection","text":"<p>Each collection is associated with a Connector and is accessed as an extension of the Connector virtual path. For example, the default collections included by default are found in the local storage Connector under path <code>/local</code>:</p> <pre><code>/local/calendars\n/local/cards\n/local/attachments\n</code></pre> <p>To add a new collection you can specify a full path for an existing connector:</p> <pre><code>coucal collection new /local/household/cleaning -type=schedule\n</code></pre> <p>The type indicates what subset of calendar, card or attachment data is supported. Type options include:</p> <ul> <li>schedule</li> <li>tracker</li> <li>availability</li> <li>journal</li> <li>asset</li> <li>entity</li> <li>attachment</li> </ul>"},{"location":"collections/#set-the-default-collection","title":"Set the default Collection","text":"<p>The default collection is used to support commands where no collection is specified. For example, if we want to perform many operations on a collection we can simplify this using the default collection:</p> <pre><code>coucal collection default /local/team-pheasant # set as default for supported collection types\ncoucal schedule meeting &lt;..&gt; # will be created in collection /local/team-pheasant if no collection is specified\n</code></pre>"},{"location":"collections/#domains","title":"Domains","text":"<p>Domains are a proposed way of organizing your collections, in order to partition data into separate contexts. Note that the following domains are suggestions only, and you are encouraged to develop your own.</p>"},{"location":"collections/#household","title":"Household","text":"<p>A household domain, relating to household activities, might include the following subdomains:</p> <ul> <li>Cleaning - routine cleaning of household areas</li> <li>Cooking - preparing meals</li> <li>Gardening - maintaining outdoor areas</li> <li>Maintenance - general repairs and upkeep</li> </ul> <p>Each subdomain could be represented by separate collections for storing assets, reminders, tasks, etc.</p> <ul> <li>/local/house/cleaning/calendars</li> <li>/local/house/cleaning/cards</li> <li>/local/house/cleaning/attachments</li> <li>...</li> </ul> <p>You can use these subdomains to start tracking your assets:</p> <pre><code>coucal journal tool -summary='Lawn Mower' -attach=@warranty.pdf /local/house/gardening/cards\nCreated journal: 1234-abcd-9887\n</code></pre> <p>And related reminders:</p> <pre><code>coucal schedule reminder -summary='Sharpen lawn mower blades' -use-template=annual-reminder \\\n    -related=1234-abcd-9887 /local/house/gardening/calendars\n</code></pre>"},{"location":"collections/#workplace","title":"Workplace","text":"<p>A workplace domain (depending on the nature of work), could include subdomains like this:</p> <ul> <li>Finance - internal budgeting and costing</li> <li>Operations - regular support activities</li> <li>Projects - funded enhancements/changes to processes or services</li> </ul> <p>Within a team the domain hierarchy could look like this:</p> <ul> <li>/local/acme/project-one/finance/calendars</li> <li>/local/acme/project-one/finance/attachments</li> <li>/local/acme/project-one/work/calendars</li> <li>/local/acme/bau/finance/calendars</li> <li>/local/acme/bau/operations/calendars</li> </ul> <p>You can see how easily domains can be subdivided making it easier to manage the pressures of data overload.</p>"},{"location":"connectors/","title":"Connectors","text":"<p>Connectors provide standard interfaces for interacting with external calendar servers and other means of persisting calendar and resource data.</p>"},{"location":"connectors/#overview","title":"Overview","text":"<p>The default Connectors include support for local storage and DAV-compliant servers (i.e. CalDAV or  CardDAV). A Connector instance is configured with an associated virtual path, which allows you to configure multiple instances of the same Connector type.</p>"},{"location":"connectors/#local-storage","title":"Local Storage","text":"<p>The default connector uses local file-based storage for managing your data. The benefits of this connector include:</p> <ul> <li>Zero configuration default means you can use it immediately</li> <li>It's fast for creating new data</li> <li>Data is stored locally so less need to secure transports and connectivity with external systems</li> </ul>"},{"location":"connectors/#caldavcarddav-server","title":"CalDAV/CardDAV Server","text":"<p>The DAV connector is compliant with these popular standards for accessing and managing calendar and resource data. The benefits of this connector include:</p> <ul> <li>Connectivity to existing calendaring systems such as Google, Radicale, Baikal, Zoho, etc.</li> <li>You can directly manipulate your calendars and contacts but continue to use your favourite clients</li> </ul>"},{"location":"connectors/#enable-a-connector-instance","title":"Enable a Connector instance","text":"<p>Each connector instance is associated with a virtual path. For example the default connector using local storage is configured with the following path:</p> <pre><code>/local\n</code></pre> <p>To create a new local storage instance you would need to use a different path:</p> <pre><code>coucal connector local /sandbox\n</code></pre> <p>If a connector does not yet have any instances you can omit the path to use the default path:</p> <pre><code>coucal connector dav -host=dav.example.com # will use the default path of /dav\n</code></pre>"},{"location":"connectors/#disable-a-connector-instance","title":"Disable a Connector instance","text":"<p>TBD.</p>"},{"location":"design/","title":"Design","text":"<p>Coucal is an application that can be run either as a command line tool or a HTTP service. A single command-based architecture underlies both modes of operation, which means the functionality is near identical.</p>"},{"location":"design/#icalendar-and-vcard","title":"iCalendar and vCard","text":"<p>Coucal is built on standards relating to the iCalendar and vCard specifications for defining calendaring and resource data. The iCal4j project is used to implement most of the core functionality.</p>"},{"location":"design/#java","title":"Java","text":"<p>Coucal requires a Java 8 runtime at minimum to be installed in the target environment. Java 11 or higher is recommended.</p>"},{"location":"entities/","title":"Entities","text":"<p>TBD.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#calendar-management","title":"Calendar Management","text":"<p>Whether you use MS Outlook, Google or some other calendaring tool, you probably find that managing meetings and appointments requires some level of dedication and skill to maintain an effective and manageable schedule.</p> <p>Coucal can connect directly with your calendar server to manipulate your calendars either manually or via automation rules to maintain a healthy schedule. You can also use queries to extract information from your calendars to gain clarity and insights from an often busy schedule.</p>"},{"location":"features/#work-tracker","title":"Work Tracker","text":"<p>Tasks and workflows are often managed via different tools depending on the context. For example, you may use something like JIRA for work and project management, but at home you might use something like Wunderlist or Trello.</p> <p>Coucal is capable of synchronising with configured workflow and task management applications, and even act as a bridge between these tools.</p>"},{"location":"features/#journaling","title":"Journaling","text":"<p>If we think of journaling today it is typically associated with a blog, but sometimes we have a need to journal items that we would like to remain private, or share with a limited audience. For this purpose you may be using tools such as Evernote, Notion or Google Keep.</p> <p>Coucal can also manage notes and synchronize with popular note-taking applications. Notably you can use Coucal to manage the lifecycle of documents and other artefacts through journaling, which is becoming increasingly important as the volume of our personal data increases. Historically this was a concern only for organizations, but personal archiving and journaling is a concern we all now face.</p> <p>Coucal can connect with digital storage providers for archiving files, as well as providing a managed lifecycle of artefacts that may also be shared with collaborators.</p>"},{"location":"features/#availability","title":"Availability","text":"<p>TBD.</p>"},{"location":"features/#asset-management","title":"Asset Management","text":"<p>TBD.</p>"},{"location":"first-steps/","title":"Help Documentation","text":"<p>When you first install Coucal a good way to familiarize yourself with the commands is via the help documentation:</p> <pre><code>$ coucal -help\n</code></pre> <pre><code>Usage: coucal [-hV] [COMMAND]\nCoucou! Let's collaborate.\n  -h, --help      Show this help message and exit.\n  -V, --version   Print version information and exit.\nCommands:\n  alert         Manage configured alert templates\n  assets        Manage asset used as attachments, etc.\n  availability  Manage recorded availability data\n  entity        Manage entity data\n  collection    Workspaces for calendar and card data\n  schedule      Manage scheduled event data\n  journal       Manage recorded journaling data\n  query         Filter queries for retrieving calendar and card data\n  connector     Backend support for calendar and card data\n  tracker       Task and workflow tracking\n  server        Start server for receiving requests\n  integration   External integrations for sharing calendar and card data\n  insight       Report on stored data using AI\n</code></pre> <p>Each of the subcommands also provide contextual help documentation:</p> <pre><code>$ coucal schedule -help\n</code></pre> <pre><code>Usage: coucal schedule [-hV] [COMMAND]\nManage scheduled event data\n  -h, --help      Show this help message and exit.\n  -V, --version   Print version information and exit.\nCommands:\n  list     List available events\n  meeting  Create a new meeting\n</code></pre>"},{"location":"journal/","title":"Journaling","text":"<p>TBD.</p>"},{"location":"queries/","title":"Queries","text":"<p>TBD.</p>"},{"location":"schedule/","title":"Scheduling","text":"<p>TBD.</p>"},{"location":"templates/","title":"Templates","text":"<p>Templates are partially pre-filled calendar and resource data that make it easier to create new data in a consistent way. Coucal includes some built-in templates that are used to define the many creation options under each subcommand.</p> <p>For example, templates included with the schedule subcommand include:</p> <ul> <li>Appointment</li> <li>Meeting</li> <li>Reminder</li> <li>Observance</li> </ul> <p>The work tracker subcommand includes:</p> <ul> <li>Task</li> <li>Project</li> <li>Milestone</li> </ul>"},{"location":"templates/#saved-templates","title":"Saved Templates","text":"<p>You can also define your own templates using the same functionality for creating new data. For any creation command you can add the <code>-save-template=&lt;name&gt;</code> option to save the data as a template. </p> <p>Saved templates are essentially 'hidden' from most views, but can be specified as the base template for  new data via the option <code>-use-template=&lt;name&gt;</code>. You can also list and delete saved templates via the <code>template</code> subcommand.</p>"},{"location":"tracker/","title":"Tracker","text":"<p>TBD.</p>"},{"location":"examples/","title":"Overview","text":"<p>Here you will find examples of how to use the Coucal command line to manage your calendaring data.</p>"},{"location":"examples/channel/","title":"Integration Channels","text":""},{"location":"examples/channel/#enable-an-email-channel","title":"Enable an email channel","text":"<pre><code>coucal channel email -smtpHost=smtp.google.com /google\n</code></pre>"},{"location":"examples/channel/#publish-an-event-via-email","title":"Publish an event via email","text":"<pre><code>coucal channel publish -uid=1234-abcd-9876-fffa -recipient=joe.bloggs@example.com /google\n</code></pre>"},{"location":"examples/channel/#set-the-default-channel","title":"Set the default channel","text":"<pre><code>coucal channel default /google\n</code></pre>"},{"location":"examples/channel/#send-an-invitation-to-event-attendees","title":"Send an invitation to event attendees","text":"<pre><code>coucal channel request -uid=1234-abcd-9876-fffa # will use the default channel\n</code></pre>"},{"location":"examples/channel/#enable-a-slack-channel","title":"Enable a Slack channel","text":"<pre><code>coucal channel slack -slackChannel=events /slack/events\n</code></pre>"},{"location":"examples/channel/#publish-an-event-via-slack","title":"Publish an event via Slack","text":"<pre><code>coucal channel publish -uid=1234-abcd-9876-fffa /slack/events\n</code></pre>"},{"location":"examples/channel/#accept-an-event-invitation","title":"Accept an event invitation","text":"<pre><code>coucal channel reply -uid=1234-abcd-9876-fffa -partstat=accepted /google\n</code></pre>"},{"location":"examples/schedule/","title":"Schedule a meeting","text":"<pre><code>coucal schedule meeting -start-date=mar24 -time=930am -dur=30m\n</code></pre>"}]}